# Cargamos el juego de datos
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
# Nombres de los atributos
names(datosAdult) <- c("age","workclass","fnlwgt","education","education-num","marital-status","occupation","relationship","race","sex","capital-gain","capital-loss","hour-per-week","native-country","income")
unique(datosAdult$education)
unique(datosAdult$`education-num`)
library(dplyr)
filas= nrow(datosAdult)
E18=c(" Preschool"," 1st-4th"," 5th-6th"," 7th-8th"," 9th"," 10th" ," 11th"," 12th")
E912=c(" HS-grad"," Some-college"," Assoc-acdm"," Assoc-voc", "E912")
E1316=c(" Bachelors"," Masters" ," Prof-school"," Doctorate")
for (i in filas){ # no cambia las filas porque tiene que se de 1:filas. Lo dejo así. Luego he modificado el DF para aplicar esta categorización.
if (datosAdult$education[i] %in% E18){
datosAdult$education[i]= "E18"
} else if(datosAdult$education[i] %in% E912){
datosAdult$education[i]= "E912"
} else if (datosAdult$education[i] %in% E1316){
datosAdult$education[i]= "E1316"
}
}
table(datosAdult$education)
# Revisión de los tipos de datos y el numero de observaciones en cada uno:
str(datosAdult)
# ninguna de las variables está factorizada
summary(datosAdult) # resumen de las variables que hay
colSums(is.na(datosAdult)) # comprobamos si hay nulos
colSums(datosAdult == "") # revisamos si hay datos vacios
# Comprobar los valores de cada variable, para ver si hay que elimnar alguna. Usamos Table para ver los pesos de cada variable
table(datosAdult$workclass)
table(datosAdult$education)
table(datosAdult$'marital-status')
table(datosAdult$occupation)
table(datosAdult$relationship)
table(datosAdult$race)
table(datosAdult$sex)
table(datosAdult$'hour-per-week')
table(datosAdult$'native-country')
table(datosAdult$income)
# estas variables tiene datos sin completar, aparecen con el simbolo ?. Vamos a ver como podemos modificar ese dato.
# compobamos el peso relativo de ese valor
round(prop.table(table(datosAdult$workclass)), 4)
round(prop.table(table(datosAdult$occupation)), 4)
round(prop.table(table(datosAdult$`native-country`)), 4)
# no hay una determinación clara de estas variables para sustiruirlos. Aún asi voy a sustituir  en workclass el valor ? por "Private" que es el que tiene una mayor representación y en "native-country" por "United-Sates"
# Cambio de valores :
datosAdult$workclass[workclass == " ?"] = " Private"
# Cambio de valores :
datosAdult$workclass[workclass == " ?"] = " Private"
# Cambio de valores :
datosAdult$workclass[datosAdult$workclass == " ?"] = " Private"
datosAdult$`native-country`[datosAdult$`native-country` == " ?"] = " United-States"
# Cambio de valores :
datosAdult$workclass[datosAdult$workclass == " ?"] = " Private"
datosAdult$`native-country`[datosAdult$`native-country` == " ?"] = " United-States"
table(datosAdult$workclass)
round(prop.table(table(datosAdult$workclass)), 4)
table(datosAdult$`native-country`)
round(prop.table(table(datosAdult$`native-country`)), 4)
# Antes de hacer modificaciones hago una copia del df
datosAdultBkup <- datosAdult
# Voy a factorizar las variables más importantes que tienen pocos valores únicos.
attach(datosAdult)
apply(datosAdult, MARGIN = 2, FUN = function(x) length (unique(x)))
# Podemos discretizar la Edad (si le ponemos rangos de edad),education (si la agrupamos), Workclass, marital status, Relationship, race, sex e income.
library(dplyr)
# Empezamos por la edad, hago 4 categorias 17-30, 31-45, 46-60 y más de 60
datosAdult <- datosAdult %>% mutate(Edades = if_else (age>60,"> 60",
ifelse(age>46,"Entre 45-60",
ifelse(age>30,"30-45",
"17-30"))))
datosAdult %>% group_by(Edades) %>% count()
# Modifico la variuable de educación
datosAdult <- datosAdult %>% mutate(Educacion = if_else (education %in% E18,"E18",
ifelse(education %in% E912,"E912",(
ifelse(education %in% E1316,"E1316", "Nada"
)))))
datosAdult %>% group_by(Educacion) %>% count()
table(datosAdult$education)
apply(datosAdult, MARGIN = 2, FUN = function(x) length (unique(x)))
# Creadas las categorias y agrupaciones, voy a hacer la factoriazión de las variables indicadas antes.
cols <- c("Educacion",
"Edades",
"workclass",
"marital-status",
"relationship",
"sex",
"race",
"income")
for (i in cols){
datosAdult[,i] = as.factor(datosAdult[,i])
}
str(datosAdult)
# Edades y tipos de trabajo
ggplot(data=datosAdult[1:filas,],
aes(
x = Edades,
fill = workclass
)
) + geom_bar()
library(ggplot2)
# Edades y tipos de trabajo
ggplot(data=datosAdult[1:filas,],
aes(
x = Edades,
fill = workclass
)
) + geom_bar()
# Edades y tipos de trabajo
ggplot(data=datosAdult[1:filas,],
aes(
x = Edades,
fill = workclass
)
) + geom_bar()
# Edades y salarios
ggplot(data=datosAdult[1:filas,],
aes(
x = income,
fill = Edades
)
) + geom_bar()
#Educacion y tipos de trabajos
ggplot(data=datosAdult[1:filas,],
aes(
x = Educacion,
fill = workclass
)
) + geom_bar()
#Educacion y salarios
ggplot(data=datosAdult[1:filas,],
aes(
x = Educacion,
fill = income,
)
) + geom_bar(position = "fill")
